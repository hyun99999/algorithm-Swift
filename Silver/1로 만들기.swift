// X 연산은 다음과 같이 할 수 있다.
// X 3로 나누어 떨어지면 나누기
// X 2로 나누어 떨어지면 나누기
// 1을 빼기

// 적절히 사용해서 1을 만들려고 한다.
// 최솟값을 출력하시오.

// 시간제한이 있기 때문에 DP 를 사용.
// 1,000,000 배열을 만듦.
var n: Int = Int(readLine()!) ?? 0
var dp: [Int] = Array(repeating: 0, count: n + 1)

// [0] [0] [1] [1] [2] [3] [2] [3] [3] [2] [3] [4] [3] [4] [4]  [4] [4] [5] [3]
//  0   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18

// 1 때문에
// for i in 2...n { 하면 안됨.
for i in 2..<n + 1 {
    dp[i] = dp[i - 1] + 1
    // 🚨 2와 3을 따로 분기처리 해야함. (18 같은 경우)
    if i % 2 == 0 {
        dp[i] = min(dp[i], dp[i / 2] + 1)
    }
    
    if i % 3 == 0 {
        dp[i] = min(dp[i], dp[i / 3] + 1)
    }
}

print(dp[n])
