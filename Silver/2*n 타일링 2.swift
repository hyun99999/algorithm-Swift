// 2 * n 직사각형을 1*2 와 2*1, 2*2 타일로 채우는 방법의 수를 구하시오.

let n: Int = Int(readLine()!) ?? 0

// 아이디어: 경우의 수가 늘어나는 것이 피보나치 형태. + 2*2
// 2*1 = 1
// 2*2 = 2 + 1
// 2*3 = 3 + 2
// 2*4 = 5 + 6
// 2*5 = 8 + 10
// dp

// n-2 와 2*2 경우의 수2(ㅁ, =) || 은 n-1 과 동일.
// n-1 와 2*1 경우의 수1(|)


var dp: [Int] = Array(repeating: 0, count: 1001)

dp[1] = 1
dp[2] = 3

if n >= 3 {
    for i in 3...n {
        dp[i] = (dp[i - 1] + 2 * dp[i - 2]) % 10007
    }
}

print(dp[n])
